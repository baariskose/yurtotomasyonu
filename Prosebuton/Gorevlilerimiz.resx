<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5QECDys70ROS2gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPcSURBVFhH
        tVdZTBNRFB13OgVUYkARAkLLIhDZNH5oYvSHRD/8wdBBXIKi4hYihkBZ6gKiLIKaaIzRX+XH2BkURUDF
        1lrKJlaoP8YlMcblQ0RjBJ/3jXfITBc0wJzkfJB77zun791578JQCBxbxnPsRyCZAn8C3wCtPKdtNBv8
        13esY2aLAhPBciQi/3ZOgLcFp04D+w64qymTmYVynnCUxwnO2lRiLYokjwrCpsSO/YvJnR3zvZl5xnPz
        9CiphK1Yl+O6sJq8nC6eX036TyWRtn3B7iY+89naDSirRFd5TPWz6hVfBk6njEyWztqUn0ONK3/LzdiN
        OgKichMj0G9pKKsOrKWxGd3H4u8PNvw1Az9OboDy7S2DNgTT1YPFGB/RV5n0jpp4dDjU3cRVTFMXxMTM
        7DuZMOisSyOC8ihGhRz/RExTF9aCMM3zmuTh9ny3pjSwlzFFfTwp0e2yFUcpDWSz702wQ5iiPqxFy94q
        DABvZbHpGFYfbfnBl90NmA2aLRhWH2aOzXU3cG9PUDmG1QdcSJy7AcuRyGsYVh9mTlsoF2/e6k+eGvUX
        Maw+QPSm3AC9nJ6W6oow/P9ozVw4X+A0NbDIN+BrIYvdiCGfaMkMDILcEUmcsr8yccxujA7HlH+DfrPw
        7e6G4g/yhYDD8N5rMM0rYECpk9e054fQF/MThv8NYavfWijskS8i580sv0hM9UCzQZsBOaNSrgBnT+eP
        rvLYS5jiG82cXwTc4TekYl805/gtwxIFzNnsJp7TfJXy6HvQczyeOGtSfjhNCXMxzRN8HsNCwXHgd6l4
        Irob4LdpltK7HmJj43kg7qiIJXT48dl8hGFm4PfqcW1ORBgySsycpkDgtPXwdydwfMsp72wPJPA0i0MK
        nRVQTglHHjMHmoyXF06V9LwtRyPIUMNKUbz35HIXfaJRUgm4FPZCY4hF3hb7XzZvCxCHU3uZnrw4my4K
        023vrohrpTuMcp4A8Vya/KI+jTw8BBNMtncBb+yvSiTO+lTiOrdqfB6UOHBmxVf641DGN5qamFm9lQmv
        pcL+qiTSmrfIq6A7nXWpClE6nPZVJryCXTjhc8t9wV6qq3LWpv0SF4MRu/tYHGnZ6XXWH6etOPo6DJ9X
        uowxJY7SmM0OUyiLy00ONpMusNsUz7vO/Z1shxpXic3kqz9acgN1WDq9sJfok2ErXXQnqBGY/UnHgSUK
        8bu5C8ljY9QaLFEHtmL9zoHq5GHpjOk3/eBgKOksCBebVnUDFLSZHMbYi4P16aOSEUo4nt+9psgFmKY+
        LIUhwdAfnXC5jNF/x6DTCzE0CTDMH4pg9hUEbi4SAAAAAElFTkSuQmCC
</value>
  </data>
</root>